[{"C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\index.js":"1","C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\reportWebVitals.js":"2","C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\App.js":"3","C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\components\\Home.js":"4","C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\components\\TestModules.js":"5","C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\components\\Nav.js":"6","C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\components\\Why.js":"7","C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\utils\\queries.js":"8"},{"size":742,"mtime":1683201395137,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1682169316804,"results":"11","hashOfConfig":"10"},{"size":887,"mtime":1683064100220,"results":"12","hashOfConfig":"10"},{"size":1026,"mtime":1683201696273,"results":"13","hashOfConfig":"10"},{"size":1109,"mtime":1682546172887,"results":"14","hashOfConfig":"10"},{"size":1269,"mtime":1682546168995,"results":"15","hashOfConfig":"10"},{"size":2362,"mtime":1682546157051,"results":"16","hashOfConfig":"10"},{"size":133,"mtime":1683201007736,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15s01yz",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\index.js",[],[],"C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\App.js",[],[],"C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\components\\Home.js",[],[],"C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\components\\TestModules.js",[],[],"C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\components\\Nav.js",[],[],"C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\components\\Why.js",["43","44","45"],[],"import React from 'react';\r\nimport '../styles/why.css'\r\n\r\nconst Why = () => {\r\n\r\n    const [numCircles, setNumCircles] = React.useState(Math.floor(Math.random() * 10));\r\n    const [timeOffset, setTimeOffset] = React.useState(Math.random());\r\n    const [colorChoice, setColorChoice] = React.useState('red');\r\n    // const [circleRadius, setCircleRadius] = React.useState(Math.floor(Math.random() * 5))\r\n    // const bgcolor = [ // background colour array for svg canvas\r\n    //     \"green\",\r\n    //     \"blue\",\r\n    //     \"yellow\",\r\n    //     \"red\",\r\n    //     \"purple\"\r\n    // ];\r\n    \r\n\r\n    const [time, setTime] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n      const update = (t) => {\r\n        setTime(t / 1000);\r\n        requestAnimationFrame(update);\r\n      }\r\n  \r\n      requestAnimationFrame(update);\r\n    }, []);\r\n\r\n    let circles = []\r\n    for (let i = 0; i < numCircles; i++) {\r\n      circles.push(<circle cx={100 + (i * 10)} cy={250} r={Math.sin(time + (i * timeOffset)) * 40 + 40} stroke=\"white\" />)\r\n    };\r\n\r\n    const chooseColor = (e) => {\r\n        var setColorChoice = e.target.value\r\n        return colorChoice;\r\n    }\r\n\r\n\r\n    return (\r\n        <div id='main-container'>\r\n            hello..\r\n            <h1>My first SVG</h1>\r\n                <div id='svg-container'>\r\n                <svg width=\"500\" height=\"500\" onChange={chooseColor()} style={{backgroundColor: {setColorChoice}}} >\r\n                {circles}\r\n                </svg>\r\n\r\n                    {/* <svg  width=\"500\" height=\"500\">\r\n                    <circle cx=\"50\" cy=\"50\" r={setCircleRadius(circleRadius * (time / 100))} stroke=\"green\" strokeWidth=\"4\" fill=\"yellow\" />\r\n                    <rect x=\"100\" y=\"200\" width=\"150\" height=\"150\" stroke='blue' strokeWidth=\"3\" fill=\"green\" />\r\n                    </svg> */}\r\n                </div>\r\n                <div>\r\n                    <label for=\"colors\">Choose a color:</label>\r\n                        <select id=\"colors\" name=\"colors\">\r\n                        <option value=\"green\">Green</option>\r\n                        <option value=\"blue\">Blue</option>\r\n                        <option value=\"yellow\">Yellow</option>\r\n                        <option value=\"orange\">Orange</option>\r\n                        </select>\r\n                </div>\r\n\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Why;\r\n\r\n","C:\\Users\\tomma\\bootcamp\\poly-flow\\my-app\\client\\src\\utils\\queries.js",[],[],{"ruleId":"46","severity":1,"message":"47","line":6,"column":24,"nodeType":"48","messageId":"49","endLine":6,"endColumn":37},{"ruleId":"46","severity":1,"message":"50","line":7,"column":24,"nodeType":"48","messageId":"49","endLine":7,"endColumn":37},{"ruleId":"46","severity":1,"message":"51","line":36,"column":13,"nodeType":"48","messageId":"49","endLine":36,"endColumn":27},"no-unused-vars","'setNumCircles' is assigned a value but never used.","Identifier","unusedVar","'setTimeOffset' is assigned a value but never used.","'setColorChoice' is assigned a value but never used."]